package com.springproject.archive.dao;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import com.springproject.archive.dto.BlogDTO;
import com.springproject.archive.util.JDBConnect;

public class BlogDAO extends JDBConnect {

    // 전체 블로그 리스트 조회
    public List<BlogDTO> getAllBlogs() {
        List<BlogDTO> blogList = new ArrayList<>();
        String sql = "SELECT * FROM blog ORDER BY created_at DESC";

        try (PreparedStatement pstmt = conn.prepareStatement(sql);
             ResultSet rs = pstmt.executeQuery()) {

            while (rs.next()) {
                BlogDTO blog = new BlogDTO();
                blog.setId(rs.getInt("id"));
                blog.setUserId(rs.getInt("user_id"));
                blog.setTitle(rs.getString("title"));
                blog.setContent(rs.getString("content"));
                blog.setThumbnailUrl(rs.getString("thumbnail_url"));
                blog.setCreatedAt(rs.getTimestamp("created_at"));

                blogList.add(blog);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        return blogList;
    }

    // 단일 블로그 조회 (선택적으로 사용할 수 있음)
    public BlogDTO getBlogById(int id) {
        BlogDTO blog = null;
        String sql = "SELECT * FROM blog WHERE id = ?";

        try (PreparedStatement pstmt = conn.prepareStatement(sql)) {
            pstmt.setInt(1, id);
            try (ResultSet rs = pstmt.executeQuery()) {
                if (rs.next()) {
                    blog = new BlogDTO();
                    blog.setId(rs.getInt("id"));
                    blog.setUserId(rs.getInt("user_id"));
                    blog.setTitle(rs.getString("title"));
                    blog.setContent(rs.getString("content"));
                    blog.setThumbnailUrl(rs.getString("thumbnail_url"));
                    blog.setCreatedAt(rs.getTimestamp("created_at"));
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        return blog;
    }

    // 블로그 글 추가
    public int insertBlog(BlogDTO blog) {
        String sql = "INSERT INTO blog(user_id, title, content, thumbnail_url) VALUES (?, ?, ?, ?)";
        int result = 0;

        try (PreparedStatement pstmt = conn.prepareStatement(sql)) {
            pstmt.setInt(1, blog.getUserId());
            pstmt.setString(2, blog.getTitle());
            pstmt.setString(3, blog.getContent());
            pstmt.setString(4, blog.getThumbnailUrl());
            result = pstmt.executeUpdate();
        } catch (Exception e) {
            e.printStackTrace();
        }

        return result;
    }
}
